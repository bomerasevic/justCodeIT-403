// <auto-generated />
using System;
using System.Collections.Generic;
using Hackathon.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Hackathon.DAL.Migrations
{
    [DbContext(typeof(HackathonContext))]
    [Migration("20191221152959_Hackathon1")]
    partial class Hackathon1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Hackathon.Domain.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<decimal>("Area");

                    b.Property<bool>("ArmoredDoor");

                    b.Property<DateTime>("Created");

                    b.Property<int>("Creator");

                    b.Property<DateTime>("DateOfPublication");

                    b.Property<DateTime>("DateOfRenewal");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description");

                    b.Property<int>("Flat");

                    b.Property<bool>("Gas");

                    b.Property<string>("HeatingType");

                    b.Property<int?>("LocationId");

                    b.Property<bool>("NewlyBuilt");

                    b.Property<int>("NumberOfRooms");

                    b.Property<bool>("Power");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("Hackathon.Domain.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<int>("Creator");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Hackathon.Domain.Roommate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<int>("Creator");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Email");

                    b.Property<string>("Faculty");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Roommates");
                });

            modelBuilder.Entity("Hackathon.Domain.Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Company");

                    b.Property<DateTime>("Created");

                    b.Property<int>("Creator");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Distance");

                    b.Property<decimal>("Duration");

                    b.Property<List<string>>("FromLocation");

                    b.Property<string>("Line");

                    b.Property<decimal>("Price");

                    b.Property<string>("Time_of_Arrival");

                    b.Property<string>("Time_of_Departure");

                    b.Property<List<string>>("ToLocation");

                    b.HasKey("Id");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("Hackathon.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<int>("Creator");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Hackathon.Domain.Apartment", b =>
                {
                    b.HasOne("Hackathon.Domain.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });
#pragma warning restore 612, 618
        }
    }
}
